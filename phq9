const phq9Questions = [
      "รู้สึกเบื่อ ไม่สนใจอยากทำอะไร",
      "รู้สึกหดหู่ ซึมเศร้า หรือสิ้นหวัง",
      "หลับยาก หรือหลับๆ ตื่นๆ หรือหลับมากเกินไป",
      "รู้สึกเหนื่อย ไม่มีแรง",
      "เบื่ออาหาร หรือกินมากเกินไป",
      "รู้สึกไม่ดีกับตัวเอง คิดว่าตัวเองล้มเหลว",
      "สมาธิไม่ดี เวลาทำอะไร เช่น ดูทีวี อ่านหนังสือ",
      "พูดช้า หรือกระสับกระส่ายจนคนสังเกตเห็น",
      "คิดว่าถ้าตายไป คงจะดี หรือคิดทำร้ายตนเอง" // PHQ-9 Question 9 (index 8)
    ];

    const phq9Choices = ["0 = ไม่เลย", "1 = เป็นบางวัน", "2 = บ่อยครั้ง", "3 = เกือบทุกวัน"];

    const Q8Questions = [
        "ใน 1 เดือนที่ผ่านมา ท่านมีความคิดอยากตาย/อยากทำร้ายตนเอง หรือวางแผนที่จะทำร้ายตนเองบ่อยแค่ไหน",
        "ท่านมีความคิดหรือความตั้งใจที่จะทำร้ายตนเอง",
        "ท่านเคยพยายามทำร้ายตนเองมาก่อนหรือไม่",
        "ท่านวางแผนที่จะทำร้ายตนเองเมื่อใด",
        "ท่านคิดว่าแผนการทำร้ายตนเองของท่านจะสำเร็จหรือไม่",
        "ท่านเคยทำร้ายตนเองด้วยวิธีใดบ้าง (ตอบได้มากกว่า 1 ข้อ)", // This is a checkbox question
        "ท่านมีสิ่งยึดเหนี่ยวจิตใจที่ทำให้ท่านไม่อยากทำร้ายตนเอง หรือไม่",
        "ท่านมีความรู้สึกว่าการทำร้ายตนเองเป็นทางออกที่ดีกว่าการมีชีวิตอยู่ หรือไม่"
    ];

    const Q8Choices = [
        ["0 = ไม่เคย", "1 = เป็นบางครั้ง", "2 = บ่อยครั้ง", "3 = เกือบตลอดเวลา"], // Q1
        ["0 = ไม่มีเลย", "1 = มีความคิดบ้างแต่ไม่มีแผนการ", "2 = มีความคิดและมีแผนการ", "3 = มีความคิดและมีแผนการอย่างชัดเจน"], // Q2
        ["0 = ไม่เคย", "1 = เคยแต่ไม่สำเร็จ", "2 = เคยสำเร็จแต่รอดมาได้", "3 = เคยสำเร็จหลายครั้ง"], // Q3
        ["0 = ไม่มีแผนการ", "1 = ภายใน 1 ปี", "2 = ภายใน 1 เดือน", "3 = ภายใน 48 ชั่วโมง"], // Q4
        ["0 = ไม่สำเร็จ", "1 = อาจสำเร็จ", "2 = น่าจะสำเร็จ", "3 = สำเร็จแน่นอน"], // Q5
        ["0 = ไม่เคยทำร้ายตนเอง", "1 = กินยาเกินขนาด", "2 = ใช้มีด/ของมีคม", "3 = กระโดดตึก/ที่สูง", "4 = แขวนคอ", "5 = ยิงตัวตาย", "6 = อื่นๆ"], // Q6 (checkboxes)
        ["0 = มี", "1 = ไม่มี"], // Q7
        ["0 = ไม่รู้สึก", "1 = รู้สึกบ้าง", "2 = รู้สึกบ่อยครั้ง", "3 = รู้สึกเกือบตลอดเวลา"] // Q8
    ];


    function renderPHQ9Questions() {
      const container = document.getElementById("questionsPHQ9");
      phq9Questions.forEach((q, i) => {
        let qHTML = `<div class="question"><label>${i + 1}. ${q}</label><br>`;
        phq9Choices.forEach((c, j) => {
          qHTML += `<label><input type="radio" name="qPHQ9_${i}" value="${j}" required> ${c}</label><br>`;
        });
        qHTML += `</div>`;
        container.innerHTML += qHTML;
      });
    }

    function interpretPHQ9(score) {
      if (score <= 4) return { level: "ไม่มีภาวะซึมเศร้า", class: "no-risk", advice: "ควรรักษาสุขภาพใจและใช้ชีวิตตามปกติอย่างมีสมดุล" };
      if (score <= 9) return { level: "ภาวะซึมเศร้าเล็กน้อย", class: "mild", advice: "แนะนำทำกิจกรรมที่ช่วยให้ผ่อนคลายและเฝ้าสังเกตอารมณ์ตนเอง" };
      if (score <= 14) return { level: "ภาวะซึมเศร้าปานกลาง", class: "moderate", advice: "ควรปรึกษานักจิตวิทยาหรือผู้เชี่ยวชาญ", link: true };
      if (score <= 19) return { level: "ภาวะซึมเศร้าค่อนข้างรุนแรง", class: "moderate-severe", advice: "ควรเข้ารับการดูแลจากผู้เชี่ยวชาญโดยเร็ว", link: true };
      return { level: "ภาวะซึมเศร้าและเสี่ยงต่อการฆ่าตัวตายรุนแรง", class: "severe", advice: "แนะนำพบจิตแพทย์หรือนักจิตวิทยาอย่างเร่งด่วน", link: true };
    }

    function interpret8Q(score) {
        if (score === 0) return { level: "ไม่มีความเสี่ยงต่อการฆ่าตัวตาย", class: "no-risk", advice: "ท่านไม่มีความเสี่ยงต่อการฆ่าตัวตาย ควรดูแลสุขภาพใจอย่างต่อเนื่อง" };
        if (score >= 1 && score <= 3) return { level: "มีความเสี่ยงต่ำต่อการฆ่าตัวตาย", class: "mild", advice: "ท่านมีความเสี่ยงต่ำ ควรเฝ้าระวังและดูแลสุขภาพใจอย่างใกล้ชิด หากอาการไม่ดีขึ้นควรปรึกษาผู้เชี่ยวชาญ", link: true };
        if (score >= 4 && score <= 6) return { level: "มีความเสี่ยงปานกลางต่อการฆ่าตัวตาย", class: "moderate", advice: "ท่านมีความเสี่ยงปานกลาง ควรปรึกษานักจิตวิทยาหรือผู้เชี่ยวชาญเพื่อรับคำแนะนำ", link: true };
        if (score >= 7 && score <= 9) return { level: "มีความเสี่ยงสูงต่อการฆ่าตัวตาย", class: "moderate-severe", advice: "ท่านมีความเสี่ยงสูง ควรเข้ารับการดูแลจากผู้เชี่ยวชาญโดยเร็วที่สุด", link: true };
        return { level: "มีความเสี่ยงรุนแรงต่อการฆ่าตัวตาย", class: "severe", advice: "ท่านมีความเสี่ยงรุนแรง แนะนำพบจิตแพทย์หรือนักจิตวิทยาอย่างเร่งด่วนที่สุด", link: true };
    }


    document.addEventListener("DOMContentLoaded", () => {
        renderPHQ9Questions();

        // Function to validate at least one checkbox is selected for q8Q6 if 8Q is visible
        window.validate8Q6 = function() {
            const q8QContainer = document.getElementById("questions8Q");
            if (q8QContainer.style.display === "block") {
                const q8Q6Checkboxes = document.querySelectorAll('input[name="q8Q6_checkbox"]');
                const isChecked = Array.from(q8Q6Checkboxes).some(cb => cb.checked);
                if (!isChecked) {
                    alert("กรุณาเลือกอย่างน้อยหนึ่งข้อสำหรับคำถามข้อ 6 ในแบบประเมิน 8Q");
                    return false;
                }
            }
            return true;
        };

        // Event listener for "ตรวจสอบผล PHQ-9" button
        document.getElementById("checkPHQ9Result").addEventListener("click", function() {
            // Validate personal info
            const requiredPersonalInfo = ['fname', 'lname', 'gender', 'age', 'role', 'faculty'];
            let allPersonalInfoFilled = true;
            for (const id of requiredPersonalInfo) {
                if (!document.getElementById(id).value) {
                    allPersonalInfoFilled = false;
                    document.getElementById(id).focus(); // Focus on the first empty field
                    alert("กรุณากรอกข้อมูลส่วนตัวให้ครบถ้วนก่อนตรวจสอบผล PHQ-9");
                    return;
                }
            }

            // Validate consent checkbox
            if (!document.getElementById("consentCheckbox").checked) {
                alert("กรุณาให้ความยินยอมก่อนตรวจสอบผล PHQ-9");
                return;
            }

            // Calculate PHQ-9 score
            let phq9Score = 0;
            let allPHQ9Answered = true;
            for (let i = 0; i < phq9Questions.length; i++) {
                const selected = document.querySelector(`input[name=qPHQ9_${i}]:checked`);
                if (selected) {
                    phq9Score += parseInt(selected.value);
                } else {
                    allPHQ9Answered = false;
                    // Find the question and scroll to it
                    const questionElement = document.querySelector(`.question:nth-child(${i + 1})`);
                    if (questionElement) {
                        questionElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                    alert("กรุณาตอบคำถาม PHQ-9 ให้ครบทุกข้อก่อนตรวจสอบผล");
                    return;
                }
            }

            if (!allPHQ9Answered) {
                return;
            }

            const phq9Result = interpretPHQ9(phq9Score);
            const phq9OnlyResultBox = document.getElementById("phq9OnlyResult");
            phq9OnlyResultBox.className = `result ${phq9Result.class}`;
            phq9OnlyResultBox.innerHTML = `<h3>คะแนนรวม PHQ-9: ${phq9Score} (${phq9Result.level})</h3><p><strong>สรุปผล PHQ-9:</strong></p><p>${phq9Result.advice}</p>`;
            phq9OnlyResultBox.style.display = "block";

            // If PHQ-9 Q9 is > 0, show 8Q section
            const qPHQ9_8_value = parseInt(document.querySelector('input[name="qPHQ9_8"]:checked').value);
            const q8QContainer = document.getElementById("questions8Q");
            const additional8Q = document.getElementById("additional8Q");
            const submitButton = document.getElementById("submitButton");

            if (qPHQ9_8_value > 0) {
                q8QContainer.style.display = "block";
                additional8Q.style.display = "block";
                submitButton.style.display = "block"; // Show submit button
                // Make all 8Q radio buttons required
                document.querySelectorAll('#questions8Q input[type="radio"]').forEach(radio8Q => {
                    radio8Q.setAttribute('required', 'required');
                });
                // For q8Q6 (checkbox), ensure at least one is checked if 8Q is active
                const q8Q6Checkboxes = document.querySelectorAll('input[name="q8Q6_checkbox"]');
                q8Q6Checkboxes.forEach(cb => cb.removeAttribute('required')); // Remove required for individual checkboxes
                const form = document.getElementById('phqForm');
                form.setAttribute('onsubmit', 'return validate8Q6()'); // Add general form validation for 8Q6
                
                // Scroll to 8Q section
                q8QContainer.scrollIntoView({ behavior: 'smooth', block: 'start' });

            } else {
                q8QContainer.style.display = "none";
                additional8Q.style.display = "none";
                submitButton.style.display = "block"; // Still show submit button for final submission
                // Remove required from all 8Q radio buttons
                document.querySelectorAll('#questions8Q input[type="radio"]').forEach(radio8Q => {
                    radio8Q.removeAttribute('required');
                    radio8Q.checked = false; // Uncheck them
                });
                // Remove required for q8Q6 and uncheck them
                document.querySelectorAll('input[name="q8Q6_checkbox"]').forEach(cb => {
                    cb.removeAttribute('required');
                    cb.checked = false;
                });
                const form = document.getElementById('phqForm');
                form.removeAttribute('onsubmit'); // Remove validation for 8Q6
            }
            
            // Scroll to the PHQ-9 result for user to see
            phq9OnlyResultBox.scrollIntoView({ behavior: 'smooth', block: 'start' });
        });

        // Main form submission (now only for sending data to Google Sheet)
        document.getElementById("phqForm").addEventListener("submit", async function(e) {
            e.preventDefault(); // Prevent default form submission

            // Re-calculate PHQ-9 score (in case user changed it after checking)
            let phq9Score = 0;
            for (let i = 0; i < phq9Questions.length; i++) {
                const selected = document.querySelector(`input[name=qPHQ9_${i}]:checked`);
                if (selected) phq9Score += parseInt(selected.value);
            }

            let q8Score = 0;
            const q8QContainer = document.getElementById("questions8Q");
            let is8QActive = q8QContainer.style.display === "block";

            if (is8QActive) {
                // Validate 8Q6 checkbox if 8Q is active
                if (!validate8Q6()) {
                    return; // Stop submission if validation fails
                }
                // Calculate 8Q score
                for (let i = 0; i < Q8Questions.length; i++) {
                    if (i === 5) { // For Q6 (checkboxes)
                        const selectedCheckboxes = document.querySelectorAll(`input[name="q8Q6_checkbox"]:checked`);
                        if (Array.from(selectedCheckboxes).some(cb => cb.value === "0")) {
                            q8Score += 0;
                        } else if (selectedCheckboxes.length > 0) {
                            q8Score += 1;
                        }
                    } else {
                        const selected = document.querySelector(`input[name=q8Q${i + 1}]:checked`);
                        if (selected) q8Score += parseInt(selected.value);
                    }
                }
            }

            const phq9Result = interpretPHQ9(phq9Score);
            let finalAdvice = phq9Result.advice;
            let finalClass = phq9Result.class;
            let showBookingLink = phq9Result.link;
            let q8QResult = null;

            if (is8QActive) {
                q8QResult = interpret8Q(q8Score);
                if (q8QResult.level !== "ไม่มีความเสี่ยงต่อการฆ่าตัวตาย") {
                    finalAdvice = q8QResult.advice;
                    finalClass = q8QResult.class;
                    showBookingLink = q8QResult.link;
                } else {
                    if (phq9Result.level === "ภาวะซึมเศร้าปานกลาง" || phq9Result.level === "ภาวะซึมเศร้าค่อนข้างรุนแรง" || phq9Result.level === "ภาวะซึมเศร้ารุนแรง") {
                       finalAdvice = phq9Result.advice;
                       finalClass = phq9Result.class;
                       showBookingLink = phq9Result.link;
                    }
                }
            }

            const finalResultBox = document.getElementById("finalResult");
            finalResultBox.className = `result ${finalClass}`;
            let resultHTML = `<h3>คะแนนรวม PHQ-9: ${phq9Score} (${phq9Result.level})</h3>`;
            if (is8QActive) {
                resultHTML += `<h3>คะแนนรวม 8Q: ${q8Score} (${q8QResult.level})</h3>`;
            }
            resultHTML += `<p><strong>สรุปผล:</strong></p><p>${finalAdvice}</p>`;

            if (showBookingLink) {
              resultHTML += `<a class='booking-button' href='https://outlook.office365.com/owa/calendar/GrowthMindCenter@kmitl.ac.th/bookings/' target='_blank'>จองพบนักจิตวิทยา</a>`;
            }
            finalResultBox.innerHTML = resultHTML;
            finalResultBox.style.display = "block";
            
            // Scroll to the final result
            finalResultBox.scrollIntoView({ behavior: 'smooth', block: 'start' });


            // Prepare data for Google Sheet
            const formData = new FormData(document.getElementById("phqForm"));
            const data = Object.fromEntries(formData.entries());

            // Add PHQ-9 individual question values
            for (let i = 0; i < phq9Questions.length; i++) {
                const selected = document.querySelector(`input[name=qPHQ9_${i}]:checked`);
                data[`qPHQ9_${i}`] = selected ? selected.value : '';
            }

            // Add 8Q individual question values (if active)
            if (is8QActive) {
                for (let i = 1; i <= 8; i++) {
                    if (i === 6) { // Special handling for 8Q6 checkbox
                        const selectedCheckboxes = Array.from(document.querySelectorAll('input[name="q8Q6_checkbox"]:checked'))
                                                     .map(cb => Q8Choices[5][parseInt(cb.value)]);
                        data[`q8Q${i}`] = selectedCheckboxes.join(', '); // Store as comma-separated string of chosen labels
                    } else {
                        const selected = document.querySelector(`input[name=q8Q${i}]:checked`);
                        data[`q8Q${i}`] = selected ? selected.value : '';
                    }
                }
            } else { // If 8Q not active, set all 8Q fields to 'N/A'
                for (let i = 1; i <= 8; i++) {
                    data[`q8Q${i}`] = 'N/A';
                }
            }

            data.phq9Score = phq9Score;
            data.phq9Level = phq9Result.level;
            data.q8QScore = is8QActive ? q8Score : 'N/A';
            data.q8QLevel = is8QActive ? q8QResult.level : 'N/A';

            // IMPORTANT: Replace this URL with YOUR Google Apps Script Web App URL
            fetch("https://script.google.com/macros/s/AKfycbz1VU-3eOFmwQFN0SkFGeKvzogudsVNRXI9g3KUqDm2cxEtDN3e_kuxb8w1j2BoBnVjAg/exec", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(data)
            }).then(response => response.json())
                .then(result => {
                    console.log('Success:', result);
                    alert("บันทึกข้อมูลเรียบร้อยแล้ว ขอบคุณที่ให้ความร่วมมือ!");
                    // Optionally, clear the form or redirect
                    document.getElementById("phqForm").reset(); // Reset the form
                    document.getElementById("phq9OnlyResult").style.display = "none"; // Hide PHQ-9 result box
                    document.getElementById("finalResult").style.display = "none"; // Hide final result box
                    document.getElementById("questions8Q").style.display = "none"; // Hide 8Q section
                    document.getElementById("submitButton").style.display = "none"; // Hide submit button again
                })        
                .catch(error => {
                    console.error('Error:', error);
                    alert("เกิดข้อผิดพลาดในการบันทึกข้อมูล กรุณาลองใหม่อีกครั้ง");
                });
        });
    });
